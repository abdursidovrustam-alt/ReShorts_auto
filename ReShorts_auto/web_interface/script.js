// –ì–ª–∞–≤–Ω—ã–π JavaScript —Ñ–∞–π–ª –¥–ª—è Viral Shorts Master

class ViralShortsApp {
    constructor() {
        this.isProcessing = false;
        this.currentProgress = 0;
        this.processedVideos = 0;
        this.downloadedVideos = 0;
        this.init();
    }

    init() {
        this.bindEvents();
        this.loadStatistics();
        this.checkApiSettings();
    }

    bindEvents() {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã –ø–æ–∏—Å–∫–∞
        document.getElementById('searchForm').addEventListener('submit', (e) => {
            e.preventDefault();
            this.startProcessing();
        });

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤—Å–µ—Ö –≤–∏–¥–µ–æ
        document.getElementById('downloadAllBtn').addEventListener('click', () => {
            this.downloadAllVideos();
        });

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        document.querySelector('.close').addEventListener('click', () => {
            this.closeModal();
        });

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
        window.addEventListener('click', (e) => {
            const modal = document.getElementById('apiModal');
            if (e.target === modal) {
                this.closeModal();
            }
        });
    }

    async startProcessing() {
        if (this.isProcessing) return;

        this.isProcessing = true;
        const startBtn = document.getElementById('startBtn');
        startBtn.disabled = true;
        startBtn.textContent = '‚è≥ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º...';

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–∞–Ω–µ–ª—å –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        this.showProgressPanel();
        
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
        const formData = this.getFormData();
        
        try {
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –±—ç–∫–µ–Ω–¥
            await this.processVideos(formData);
        } catch (error) {
            this.showError('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ: ' + error.message);
        } finally {
            this.isProcessing = false;
            startBtn.disabled = false;
            startBtn.textContent = 'üöÄ –ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ –∏ –æ–±—Ä–∞–±–æ—Ç–∫—É';
        }
    }

    getFormData() {
        return {
            theme: document.getElementById('theme').value,
            platform: document.getElementById('platform').value,
            videoCount: parseInt(document.getElementById('videoCount').value),
            uniqueness: document.getElementById('uniqueness').value
        };
    }

    async processVideos(formData) {
        const steps = [
            '–ü–æ–∏—Å–∫ –≤–∏—Ä—É—Å–Ω—ã—Ö –≤–∏–¥–µ–æ...',
            '–ê–Ω–∞–ª–∏–∑ –∫–æ–Ω—Ç–µ–Ω—Ç–∞...',
            '–£–Ω–∏–∫–∞–ª–∏–∑–∞—Ü–∏—è –≤–∏–¥–µ–æ...',
            '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...'
        ];

        for (let i = 0; i < steps.length; i++) {
            this.updateProgress((i + 1) / steps.length * 100, steps[i]);
            
            // –°–∏–º—É–ª—è—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥—É—Ç API –≤—ã–∑–æ–≤—ã)
            await this.delay(2000);
            
            if (i === 0) {
                // –ü–æ–∏—Å–∫ –≤–∏–¥–µ–æ
                await this.searchVideos(formData);
            } else if (i === 1) {
                // –ê–Ω–∞–ª–∏–∑
                await this.analyzeVideos(formData);
            } else if (i === 2) {
                // –£–Ω–∏–∫–∞–ª–∏–∑–∞—Ü–∏—è
                await this.uniqualizeVideos(formData);
            } else if (i === 3) {
                // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
                await this.saveResults(formData);
            }
        }

        this.showResults();
    }

    async searchVideos(formData) {
        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç API –≤—ã–∑–æ–≤
        try {
            const response = await fetch('/api/search', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(formData)
            });
            
            if (!response.ok) {
                throw new Error('–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –≤–∏–¥–µ–æ');
            }
            
            const data = await response.json();
            this.updateCurrentStep(`–ù–∞–π–¥–µ–Ω–æ ${data.found} –≤–∏–¥–µ–æ –ø–æ —Ç–µ–º–µ "${formData.theme}"`);
        } catch (error) {
            console.log('–†–∞–±–æ—Ç–∞–µ–º –≤ –¥–µ–º–æ —Ä–µ–∂–∏–º–µ - API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ');
            this.updateCurrentStep(`–ù–∞–π–¥–µ–Ω–æ ${formData.videoCount} –≤–∏–¥–µ–æ –ø–æ —Ç–µ–º–µ "${formData.theme}"`);
        }
    }

    async analyzeVideos(formData) {
        try {
            const response = await fetch('/api/analyze', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(formData)
            });
            
            if (!response.ok) {
                throw new Error('–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –≤–∏–¥–µ–æ');
            }
            
            this.updateCurrentStep('–ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω. –û–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –ª—É—á—à–∏–µ –∫–∞–Ω–¥–∏–¥–∞—Ç—ã.');
        } catch (error) {
            console.log('–†–∞–±–æ—Ç–∞–µ–º –≤ –¥–µ–º–æ —Ä–µ–∂–∏–º–µ - API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ');
            this.updateCurrentStep('–ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω. –û–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –ª—É—á—à–∏–µ –∫–∞–Ω–¥–∏–¥–∞—Ç—ã.');
        }
    }

    async uniqualizeVideos(formData) {
        try {
            const response = await fetch('/api/uniqualize', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(formData)
            });
            
            if (!response.ok) {
                throw new Error('–û—à–∏–±–∫–∞ —É–Ω–∏–∫–∞–ª–∏–∑–∞—Ü–∏–∏ –≤–∏–¥–µ–æ');
            }
            
            this.updateCurrentStep(`–£–Ω–∏–∫–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ (—É—Ä–æ–≤–µ–Ω—å: ${formData.uniqueness})`);
        } catch (error) {
            console.log('–†–∞–±–æ—Ç–∞–µ–º –≤ –¥–µ–º–æ —Ä–µ–∂–∏–º–µ - API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ');
            this.updateCurrentStep(`–£–Ω–∏–∫–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ (—É—Ä–æ–≤–µ–Ω—å: ${formData.uniqueness})`);
        }
    }

    async saveResults(formData) {
        try {
            const response = await fetch('/api/save', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(formData)
            });
            
            if (!response.ok) {
                throw new Error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤');
            }
            
            this.updateCurrentStep('–í—Å–µ –≤–∏–¥–µ–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –∏ –≥–æ—Ç–æ–≤—ã –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!');
        } catch (error) {
            console.log('–†–∞–±–æ—Ç–∞–µ–º –≤ –¥–µ–º–æ —Ä–µ–∂–∏–º–µ - API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ');
            this.updateCurrentStep('–í—Å–µ –≤–∏–¥–µ–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –∏ –≥–æ—Ç–æ–≤—ã –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!');
        }
    }

    showProgressPanel() {
        document.getElementById('progressPanel').style.display = 'block';
        document.getElementById('resultsPanel').style.display = 'none';
    }

    updateProgress(percentage, text) {
        this.currentProgress = percentage;
        document.getElementById('progressFill').style.width = percentage + '%';
        document.getElementById('progressText').textContent = text;
    }

    updateCurrentStep(step) {
        document.getElementById('currentStep').textContent = step;
    }

    showResults() {
        document.getElementById('progressPanel').style.display = 'none';
        document.getElementById('resultsPanel').style.display = 'block';
        
        // –°–æ–∑–¥–∞–µ–º –¥–µ–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        this.createDemoResults();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        this.updateStatistics();
    }

    createDemoResults() {
        const resultsContent = document.getElementById('resultsContent');
        const formData = this.getFormData();
        
        let resultsHTML = '';
        
        for (let i = 1; i <= Math.min(formData.videoCount, 5); i++) {
            resultsHTML += `
                <div class="video-result">
                    <h3>üìπ –í–∏–¥–µ–æ ${i}: "${formData.theme} - –£–Ω–∏–∫–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è ${i}"</h3>
                    <p><strong>–ò—Å—Ç–æ—á–Ω–∏–∫:</strong> ${formData.platform}</p>
                    <p><strong>–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</strong> ${Math.floor(Math.random() * 30) + 15} —Å–µ–∫</p>
                    <p><strong>–£—Ä–æ–≤–µ–Ω—å —É–Ω–∏–∫–∞–ª–∏–∑–∞—Ü–∏–∏:</strong> ${formData.uniqueness}</p>
                    <p><strong>–°—Ç–∞—Ç—É—Å:</strong> ‚úÖ –ì–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é</p>
                    <div class="video-actions">
                        <button class="btn btn-secondary" onclick="app.downloadVideo(${i})">
                            üì• –°–∫–∞—á–∞—Ç—å
                        </button>
                        <button class="btn btn-secondary" onclick="app.previewVideo(${i})">
                            üëÅÔ∏è –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä
                        </button>
                        <button class="btn btn-secondary" onclick="app.editVideo(${i})">
                            ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                        </button>
                    </div>
                </div>
            `;
        }
        
        resultsContent.innerHTML = resultsHTML;
        document.getElementById('downloadAllBtn').style.display = 'block';
    }

    downloadVideo(id) {
        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
        alert(`–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ ${id} (–¥–µ–º–æ –≤–µ—Ä—Å–∏—è - —Ñ–∞–π–ª –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ backend)`);
        this.downloadedVideos++;
        this.updateStatistics();
    }

    previewVideo(id) {
        alert(`–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –≤–∏–¥–µ–æ ${id} (–¥–µ–º–æ –≤–µ—Ä—Å–∏—è)`);
    }

    editVideo(id) {
        alert(`–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ ${id} (–¥–µ–º–æ –≤–µ—Ä—Å–∏—è)`);
    }

    downloadAllVideos() {
        alert('–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –≤–∏–¥–µ–æ (–¥–µ–º–æ –≤–µ—Ä—Å–∏—è - —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ backend)');
    }

    updateStatistics() {
        this.processedVideos = Math.min(this.processedVideos + 1, 999);
        const successRate = this.processedVideos > 0 ? Math.round((this.downloadedVideos / this.processedVideos) * 100) : 0;
        
        document.getElementById('totalProcessed').textContent = this.processedVideos;
        document.getElementById('totalDownloaded').textContent = this.downloadedVideos;
        document.getElementById('successRate').textContent = successRate + '%';
    }

    loadStatistics() {
        // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–∑ localStorage –∏–ª–∏ API
        const stats = localStorage.getItem('viralShortsStats');
        if (stats) {
            const parsed = JSON.parse(stats);
            this.processedVideos = parsed.processed || 0;
            this.downloadedVideos = parsed.downloaded || 0;
            this.updateStatistics();
        }
    }

    saveStatistics() {
        const stats = {
            processed: this.processedVideos,
            downloaded: this.downloadedVideos
        };
        localStorage.setItem('viralShortsStats', JSON.stringify(stats));
    }

    checkApiSettings() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ª–∏ API –∫–ª—é—á–∏
        const apiSettings = localStorage.getItem('viralShortsApi');
        if (!apiSettings) {
            setTimeout(() => {
                this.showModal();
            }, 2000);
        }
    }

    showModal() {
        document.getElementById('apiModal').style.display = 'block';
    }

    closeModal() {
        document.getElementById('apiModal').style.display = 'none';
    }

    showError(message) {
        alert('–û—à–∏–±–∫–∞: ' + message);
    }

    delay(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
    }
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ API
function openApiSettings() {
    alert('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ API –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –≤ —Ñ–∞–π–ª–µ config.json –ø–æ—Å–ª–µ –ø–æ–ª–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞');
    app.closeModal();
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const app = new ViralShortsApp();

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
window.addEventListener('beforeunload', () => {
    app.saveStatistics();
});